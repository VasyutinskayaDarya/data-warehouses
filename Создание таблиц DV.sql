-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."HubClient"
(
    "ClientHashKey" text COLLATE pg_catalog."default" NOT NULL,
    "LoadDate" timestamp without time zone NOT NULL,
    "RecordSource" text COLLATE pg_catalog."default" NOT NULL,
    "ClientId" uuid NOT NULL,
    CONSTRAINT "HubClient_pkey" PRIMARY KEY ("ClientHashKey")
);

CREATE TABLE IF NOT EXISTS public."HubInventory"
(
    "InventoryHashKey" text COLLATE pg_catalog."default" NOT NULL,
    "LoadDate" timestamp without time zone NOT NULL,
    "RecordSource" text COLLATE pg_catalog."default" NOT NULL,
    "InventoryNumber" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "HubInventory_pkey" PRIMARY KEY ("InventoryHashKey")
);

CREATE TABLE IF NOT EXISTS public."SatClient"
(
    "Id" uuid NOT NULL,
    "Phone" text COLLATE pg_catalog."default" NOT NULL,
    "FirstName" text COLLATE pg_catalog."default" NOT NULL,
    "Surname" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Client Id" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SatInventory"
(
    "Id" uuid NOT NULL,
    "InventoryNumber" text COLLATE pg_catalog."default" NOT NULL,
    "IsAvailable" boolean,
    "InventoryModel" uuid NOT NULL,
    CONSTRAINT "Inventory Id" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SatInventoryModel"
(
    "Id" uuid NOT NULL,
    "FullName" text COLLATE pg_catalog."default" NOT NULL,
    "InventoryType" uuid NOT NULL,
    CONSTRAINT "Inventory model Id" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SatInventoryType"
(
    "Id" uuid NOT NULL,
    "Name" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Inventory type Id" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SatOperator"
(
    "Id" uuid NOT NULL,
    "Phone" text COLLATE pg_catalog."default" NOT NULL,
    "PersonnelNumber" text COLLATE pg_catalog."default" NOT NULL,
    "FirstName" text COLLATE pg_catalog."default" NOT NULL,
    "Surname" text COLLATE pg_catalog."default" NOT NULL,
    "Patronymic" text COLLATE pg_catalog."default",
    CONSTRAINT "Operator Id" PRIMARY KEY ("Id")
);

CREATE TABLE IF NOT EXISTS public."SatOrder"
(
    "Id" uuid NOT NULL,
    "Inventory" uuid NOT NULL,
    "Client" uuid NOT NULL,
    "Operator" uuid NOT NULL,
    "OrderDate" timestamp without time zone NOT NULL,
    "Comment" text COLLATE pg_catalog."default",
    CONSTRAINT "Order Id" PRIMARY KEY ("Id")
);

ALTER TABLE IF EXISTS public."SatInventory"
    ADD CONSTRAINT "Model of inventory" FOREIGN KEY ("InventoryModel")
    REFERENCES public."SatInventoryModel" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."SatInventoryModel"
    ADD CONSTRAINT "Type of inventory model" FOREIGN KEY ("InventoryType")
    REFERENCES public."SatInventoryType" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."SatOrder"
    ADD CONSTRAINT "Order operator" FOREIGN KEY ("Operator")
    REFERENCES public."SatOperator" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."SatOrder"
    ADD CONSTRAINT "Ordered by" FOREIGN KEY ("Client")
    REFERENCES public."SatClient" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."SatOrder"
    ADD CONSTRAINT "Subject of order" FOREIGN KEY ("Inventory")
    REFERENCES public."SatInventory" ("Id") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;